package main

import (
	"fmt"
	"time"
)

func pembagianIteratif(kelas []int) ([]int, []int) {
	ganjil, genap := []int{}, []int{}
	for _, k := range kelas {
		if k%2 == 0 {
			genap = append(genap, k)
		} else {
			ganjil = append(ganjil, k)
		}
	}
	return ganjil, genap
}

func pembagianRekursif(kelas []int, ganjil, genap []int) ([]int, []int) {
	if len(kelas) == 0 {
		return ganjil, genap
	}
	if kelas[0]%2 == 0 {
		genap = append(genap, kelas[0])
	} else {
		ganjil = append(ganjil, kelas[0])
	}
	return pembagianRekursif(kelas[1:], ganjil, genap)
}

func ukurWaktu(f func([]int) ([]int, []int), kelas []int) time.Duration {
	start := time.Now()
	_, _ = f(kelas)
	return time.Since(start)
}

func main() {
	var jumlah int
	fmt.Println("Masukkan jumlah angka yang diinginkan (contoh: 10):")
	fmt.Scanln(&jumlah)

	kelas := []int{}
	for i := 1; i <= jumlah; i++ {
		kelas = append(kelas, i)
	}

	iterTime := ukurWaktu(func(kelas []int) ([]int, []int) {
		return pembagianIteratif(kelas)
	}, kelas)


	recurTime := ukurWaktu(func(kelas []int) ([]int, []int) {
		return pembagianRekursif(kelas, []int{}, []int{})
	}, kelas)


	fmt.Printf("Data kelas: %v\n", kelas)
	fmt.Printf("Waktu Iteratif: %v\n", iterTime)
	fmt.Printf("Waktu Rekursif: %v\n", recurTime)
}
